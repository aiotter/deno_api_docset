name: Invoke release creation (on new deno release)
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  deno_update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x

      - name: Get versions
        id: versions
        run: |
          echo "::set-output name=deno::v$(echo 'console.log(Deno.version.deno)' | deno run -)"
          HASH=${{ github.sha }}; echo "::set-output name=generator::${HASH:0:7}"

      - name: Get latest release
        uses: octokit/request-action@v2.x
        id: latest_release
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create release
        uses: octokit/request-action@v2.x
        with:
          route: "POST /repos/${{ github.repository }}/actions/workflows/release.yml/dispatches"
          ref: ${{ github.ref }}
          inputs: "deno_version: ${{ steps.versions.outputs.deno}}"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          ACTIONS_STEP_DEBUG: true
        if: "!startsWith(fromJson(steps.latest_release.outputs.data).name, steps.versions.outputs.deno)"
